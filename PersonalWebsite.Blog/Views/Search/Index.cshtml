
@{
    ViewData["Title"] = "搜索";
}

<style>
    a cite {
        color: white !important;
        background-color: #1E9FFF !important;
    }
</style>

<div id="demo"></div>
@section scripts{
    <script>

        layui.config({
		  base: '@Url.Content("~/res/static/js/")'
		}).use(['blog','flow'], function () {
            var $ = layui.jquery; //不用额外加载jQuery，flow模块本身是有依赖jQuery的，直接用即可。
            var flow = layui.flow;

            var keyword = '@(Html.Raw(ViewBag.Keyword))';
            $("#keyword").val(keyword);


            flow.load({
                elem: '#demo' //指定列表容器
                , done: function (page, next) { //到达临界点（默认滚动触发），触发下一页
                    var lis = [];
                    //以jQuery的Ajax请求为例，请求下一页数据（注意：page是从2开始返回）
                    $.get('@Url.Content("~/Search/SearchList?keyword=")' + keyword + '&page=' + page, function (res) {
                        //假设你的列表返回在data集合中
                        layui.each(res.data, function (index, item) {
                            var html = '<div class="item"><div class="item-box  layer-photos-demo1 layer-photos-demo"><h3><a target="_blank" href="@Url.Content("~/Article/Detail/")'+item.id+'">'+item.title+'</a></h3><h5>发布于：<span>'+item.createDateTime+'</span></h5><p>'+item.content+'</p><img src="blog/res/static/images/item.png"alt=""></div><div class="comment count"><a href="/Article/Detail/'+item.id+'#comment">评论</a><a href="javascript:;"class="like">点赞</a></div></div>';
                            lis.push(html);
                        });

                        //执行下一页渲染，第二参数为：满足“加载更多”的条件，即后面仍有分页
                        //count为Ajax返回的总页数，只有当前页小于总页数的情况下，才会继续出现加载更多
                        next(lis.join(''), page < res.count);
                    });
                }
            });
        });
    </script>
}
